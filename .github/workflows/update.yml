name: Push Updates

on:
  workflow_dispatch:

jobs:
  getversions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get Versions
        id: set-matrix
        run: |
          echo "::echo::on"
          echo "::set-output name=matrix::$(python3 versionchecker.py)"

  buildversions:
    needs: getversions
    if: ${{ fromJSON(needs.getversions.outputs.matrix).include[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.getversions.outputs.matrix) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Github CR Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: nthnv.me CR Login
      #   uses: docker/login-action@v2
      #   with:
      #     registry: cr.nthnv.me
      #     username: ${{ secrets.NTHNVCR_USERNAME }}
      #     password: ${{ secrets.NTHNVCR_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          tags: ${{ matrix.images }}
          file: ${{ matrix.dockerfile }}
          context: .
          push: true
